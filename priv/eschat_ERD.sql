-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


ALTER TABLE IF EXISTS public."ChatMember" DROP CONSTRAINT IF EXISTS "ChatMember_user_id_fkey";

ALTER TABLE IF EXISTS public."ChatMessage" DROP CONSTRAINT IF EXISTS "ChatMessage_chat_id_fkey";

ALTER TABLE IF EXISTS public."ChatMessage" DROP CONSTRAINT IF EXISTS "ChatMessage_reply_for_fkey";

ALTER TABLE IF EXISTS public."ChatMessage" DROP CONSTRAINT IF EXISTS "fc_ChatMessage_User";

ALTER TABLE IF EXISTS public."LastReadMessageInChat" DROP CONSTRAINT IF EXISTS "LastReadMessageInChat_message_id_fkey";

ALTER TABLE IF EXISTS public."Session" DROP CONSTRAINT IF EXISTS fk_session_user;



DROP TABLE IF EXISTS public."Chat";

CREATE TABLE IF NOT EXISTS public."Chat"
(
    id bigserial NOT NULL,
    name character varying(256) COLLATE pg_catalog."default" NOT NULL DEFAULT 'New Chat'::character varying,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modificated_at timestamp without time zone,
    CONSTRAINT "Chat_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."ChatMember";

CREATE TABLE IF NOT EXISTS public."ChatMember"
(
    chat_id bigint NOT NULL,
    user_id bigint NOT NULL,
    is_owner boolean DEFAULT false,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modificated_at timestamp without time zone,
    CONSTRAINT "uc_ChatMember_chat_id_is_owner" UNIQUE (chat_id, is_owner)
        INCLUDE(user_id),
    CONSTRAINT "uc_ChatMember_chat_id_user_id" UNIQUE (chat_id, user_id)
        INCLUDE(is_owner)
);

DROP TABLE IF EXISTS public."ChatMessage";

CREATE TABLE IF NOT EXISTS public."ChatMessage"
(
    id bigserial NOT NULL,
    chat_id bigint NOT NULL,
    user_id bigint NOT NULL,
    reply_for bigint,
    message text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    edited_at timestamp without time zone,
    CONSTRAINT "ChatMessage_pkey" PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."LastReadMessageInChat";

CREATE TABLE IF NOT EXISTS public."LastReadMessageInChat"
(
    chat_id bigint NOT NULL,
    message_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT "LastReadMessageInChat_pkey" PRIMARY KEY (chat_id, user_id)
        INCLUDE(message_id),
    CONSTRAINT "LastReadMessageInChat_chat_id_message_id_user_id_key" UNIQUE (chat_id, message_id, user_id)
);

DROP TABLE IF EXISTS public."Node";

CREATE TABLE IF NOT EXISTS public."Node"
(
    seq_id bigserial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    last_update_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "Node_pkey" PRIMARY KEY (seq_id),
    CONSTRAINT "uc_Node" UNIQUE (name)
);

DROP TABLE IF EXISTS public."Session";

CREATE TABLE IF NOT EXISTS public."Session"
(
    id character varying COLLATE pg_catalog."default" NOT NULL,
    user_id bigint,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    active_to timestamp without time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP + '24:00:00'::interval),
    CONSTRAINT session_pkey PRIMARY KEY (id)
);

DROP TABLE IF EXISTS public."User";

CREATE TABLE IF NOT EXISTS public."User"
(
    id bigserial NOT NULL,
    login character varying COLLATE pg_catalog."default" NOT NULL,
    passwd character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "User_pkey" PRIMARY KEY (id),
    CONSTRAINT uc_user_login UNIQUE (login)
);

ALTER TABLE IF EXISTS public."ChatMember"
    ADD CONSTRAINT "ChatMember_user_id_fkey" FOREIGN KEY (user_id)
    REFERENCES public."User" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fix_fc_ChatMember_User_Chat"
    ON public."ChatMember"(user_id);


ALTER TABLE IF EXISTS public."ChatMessage"
    ADD CONSTRAINT "ChatMessage_chat_id_fkey" FOREIGN KEY (chat_id)
    REFERENCES public."Chat" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS "ix_ChatMessage_chat_id"
    ON public."ChatMessage"(chat_id);


ALTER TABLE IF EXISTS public."ChatMessage"
    ADD CONSTRAINT "ChatMessage_reply_for_fkey" FOREIGN KEY (reply_for)
    REFERENCES public."ChatMessage" (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fix_fc_ChatMessage"
    ON public."ChatMessage"(reply_for);


ALTER TABLE IF EXISTS public."ChatMessage"
    ADD CONSTRAINT "fc_ChatMessage_User" FOREIGN KEY (user_id)
    REFERENCES public."User" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL
    NOT VALID;
CREATE INDEX IF NOT EXISTS "fki_fc_ChatMessage_USer"
    ON public."ChatMessage"(user_id);


ALTER TABLE IF EXISTS public."LastReadMessageInChat"
    ADD CONSTRAINT "LastReadMessageInChat_message_id_fkey" FOREIGN KEY (message_id)
    REFERENCES public."ChatMessage" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Session"
    ADD CONSTRAINT fk_session_user FOREIGN KEY (user_id)
    REFERENCES public."User" (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_session_user
    ON public."Session"(user_id);

END;